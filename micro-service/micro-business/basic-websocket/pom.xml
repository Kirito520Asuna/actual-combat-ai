<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.actual.combat</groupId>
		<artifactId>micro-business</artifactId>
		<version>${revision}</version>
	</parent>

	<artifactId>basic-websocket</artifactId>

	<properties>
		<hutool.version>5.8.20</hutool.version>
		<fastjson.version>2.0.32</fastjson.version>
		<logstash.version>5.3</logstash.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.actual.combat</groupId>
			<artifactId>basic-websocket-core</artifactId>
			<version>${revision}</version>
		</dependency>

		<dependency>
			<groupId>com.actual.combat</groupId>
			<artifactId>framework-knife4j</artifactId>
			<version>${revision}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.verison}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 输出目录为子模块的 target/classes -->
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<!-- 假设 banner.txt 放在父模块的 resources 目录中 -->
									<directory>${resources.basedir}/${resources.resources-common}</directory>
									<includes>
										<include>${resources.banner.name}</include>
										<include>${resources.logstash.name}</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
